shopt -s autocd #Allows you to cd into directory merely by typing the directory name.
export TERM="xterm-256color"

# Setting Bash prompt. Capitalizes username and host if root user (my root user uses this same config file).
if [ "$EUID" -ne 0 ]
    then export PS1="\[$(tput bold)\]\[$(tput setaf 1)\][\[$(tput setaf 3)\]\u\[$(tput setaf 2)\]@\[$(tput setaf 4)\]\h \[$(tput setaf 5)\]\W\[$(tput setaf 1)\]]\[$(tput setaf 7)\]\\$ \[$(tput sgr0)\]"
    else export PS1="\[$(tput bold)\]\[$(tput setaf 1)\][\[$(tput setaf 3)\]ROOT\[$(tput setaf 2)\]@\[$(tput setaf 4)\]$(hostname | awk '{print toupper($0)}') \[$(tput setaf 5)\]\W\[$(tput setaf 1)\]]\[$(tput setaf 7)\]\\$ \[$(tput sgr0)\]"
fi

#############
# Tools
#############
[ -f ~/.bash_aliases ] && source ~/.bash_aliases
[ -f ~/.bash_functions ] && source ~/.bash_functions


####################################
# Fzf
####################################
{{- if eq .chezmoi.hostname "spectre" }}
[ -f /usr/share/fzf/key-bindings.bash ] && source /usr/share/fzf/key-bindings.bash
[ -f /usr/share/fzf/completion.bash ] && source /usr/share/fzf/completion.bash

{{- else if eq .chezmoi.hostname "ubiwan" }}
[ -f /usr/share/doc/fzf/examples/key-bindings.bash ] && source /usr/share/doc/fzf/examples/key-bindings.bash
{{- end }}

# Use ~~ as the trigger sequence instead of the default **

# Setting fd as the default source for fzf
{{- if eq .chezmoi.hostname "ubiwan" }}
export FZF_DEFAULT_COMMAND='fdfind --type f --color=always'
{{- else }}
export FZF_DEFAULT_COMMAND='fd --type f --color=always'
{{- end }}

export FZF_DEFAULT_OPTS='--height 15% --border --layout=reverse --ansi'

# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"# History
}

# History
HISTSIZE=50000
HISTFILESIZE=50000
HISTTIMEFORMAT="%d/%m/%y %T "
export HISTIGNORE='ls:ps:history:exit'
export HISTCONTROL=ignorespace:erasedups:ignoreboth:ignoredups
shopt -s histappend
export PROMPT_COMMAND="${PROMPT_COMMAND}${PROMPT_COMMAND:+;}history -a; history -n"

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

####################################
#   Nnn
####################################
export NNN_USE_EDITOR=1
export NNN_BMS='d:~/Documents;u:~/;D:~/Downloads;W:~/Workspace/;t:/tmp/'
export NNN_COPIER="/home/dauliac/.config/nnn/copier.sh"
NNN_OPENER=mimeopen
NNN_TRASH=1
export NNN_FALLBACK_OPENER=xdg-open
NNN_OPENER_DETACH=1

####################################
#   Vagrant
####################################
export VAGRANT_DEFAULT_PROVIDER='libvirt'

####################################
#   Completion
####################################
#kubectl
{{- if eq .chezmoi.hostname "simforhealth" }}
source <(kubectl completion bash)
[ -f ~/.fubectl.source ] && source ~/.fubectl.source
{{- end }}

#docker-compose
# source: https://docs.docker.com/compose/completion/
[ -f /etc/bash_completion.d/docker-compose ] && source /etc/bash_completion.d/docker-compose

####################################
#   LESS
####################################
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS="-FSRXI"

####################################
#   Fasd
####################################
# https://github.com/clvv/fasd
eval "$(fasd --init auto)"
alias zz='fasd_cd -d -i' # cd with interactive selection
fasd_cache="$HOME/.fasd-init-bash"

if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init posix-alias bash-hook bash-ccomp bash-ccomp-install >| "$fasd_cache"
fi

source "$fasd_cache"
unset fasd_cache

