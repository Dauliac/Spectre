"==================== Vundle ==================

call plug#begin('~/.vim/plugged')

"==================== Plugs =================
Plug 'vim-airline/vim-airline'               "Bottom bar
Plug 'scrooloose/nerdcommenter'              "simply commenter
Plug 'google/vim-jsonnet'                    "jsonnet
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}     "Html
Plug 'morhetz/gruvbox'                       "Color
Plug 'lilydjwg/colorizer'                    "Hilight color
Plug 'Yggdroot/indentLine'                   "vertical indent symbol
Plug 'majutsushi/tagbar'                     "right bar with fuctions
Plug 'christoomey/vim-tmux-navigator'        "Tmux integration in vim
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " Fzf
Plug 'junegunn/fzf.vim'                      "Fzf integration and completion
Plug 'tonychg/MagicTemplate'                 "Templates
Plug 'airblade/vim-gitgutter'                "Git display
Plug 'fatih/vim-go', { 'for': 'go' }         "Golang
Plug 'lervag/vimtex', { 'for': 'latex' }     "Latex

call plug#end()

"filetype plugin indent on

"====================Vanilla====================
set encoding=utf-8
set splitbelow
set splitright

set mouse=a
if has("mouse_sgr")
    set ttymouse=sgr
else
    set ttymouse=xterm2
end

set wildmenu

" timeout
set timeout
set timeoutlen=1000
set ttimeout
set ttimeoutlen=10

" Minimal update time on lateX
autocmd Filetype tex setl updatetime=1

" automatically deletes all tralling whitespace on save.
autocmd BufWritePre * %s/\s\+$//e

" indentation
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType tf setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType ruby setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType html setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType css  setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType tf   setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType go   setlocal noet ci pi sts=0 sw=4 ts=4
autocmd FileType css  setlocal noet ci pi sts=0 sw=4 ts=4
autocmd FileType jsonnet setlocal ts=2 sts=2 sw=2 expandtab

" see cursor line
set cursorline                               "See cursor line
set clipboard^=unnamedplus                   "Use X clipboard
set omnifunc=syntaxComplete#Complete         "Syntax completion
autocmd BufReadPost *                        "Keep the cursor position afer close
    \ if line("'\"") > 1 && line("'\"") <= line("$") |
    \   execute "normal! g`\"" |
    \ endif
set autoread

let $BASH_ENV = "~/.bash_aliases"

" Spell
set spell

"====================Style====================
" display positional numbers
set number
set relativenumber

" listchars
set list listchars=tab:▶-,trail:·,precedes:←,extends:→,eol:¬,nbsp:␣

" color
syntax on

" indent
let g:indentLine_setColors = 0
let g:indentLine_char = '┆'
set tabstop=4
set shiftwidth=4
set softtabstop=4
set laststatus=2
set expandtab
set smartindent
set backspace=indent,eol,start
set cindent
set cinoptions=(0,u0,U0

" smart search
set ignorecase
set smartcase
filetype plugin on
filetype plugin indent on

"=====================Shortcuts===================
" change leader
let mapleader = ','

" copy to the clipboard -- need +xterm-clipboard
 nmap <Leader>y "+y<CR>

" xut code witout buffer
nmap <Leader>d "_d<CR>

" save sudo
command! W w !sudo tee %

" nnoremap k gk
" nnoremap J )
" nnoremap K (
" nnoremap µ #

"====================FZF====================
nnoremap <C-f> :Files<CR>
nnoremap <C-g> :GFiles<CR>
nnoremap <C-b> :Buffers<CR>

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
inoremap <expr> <c-x><c-k> fzf#vim#complete('cat /usr/share/dict/french')
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'left': '13%'})
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-j> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)

"====================Airline====================
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme='gruvbox'

"====================Gruvbox====================
" my color scheme is a plugin
colorscheme gruvbox
let g:gruvbox_contrast_dark='medium'
let g:gruvbox_contrast_light='soft'
set background=dark
let g:gruvbox_italic=1
let g:gruvbox_termcolors=256

" transparent background
hi Normal guibg=NONE ctermbg=NONE "Transparent background

"=====================NERDCommenter===================
filetype plugin on
let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDCommentEmptyLines = 0
let g:NERDTrimTrailingWhitespace = 1

"=====================Latex===================
let g:vimtex_view_method = 'zathura'
let g:vimtex_compiler_method = 'latexrun'
let g:vimtex_view_enabled = 1

"=====================Tmux===================
let g:tmux_navigator_save_on_switch = 2

"=====================Templates===================
let g:templatesDirectory = $HOME."/Templates/"

"=====================GitGutter===================
" allow to change color
let g:gitgutter_override_sign_column_highlight = 0
" remove basic backgorund
highlight SignColumn ctermbg=none
" change 'add' symbol
highlight GitGutterAdd ctermbg=none
highlight GitGutterAdd ctermfg=Green
" change 'change' symbol
highlight GitGutterChange ctermbg=none
highlight GitGutterChange ctermfg=Cyan
" change 'delete' symbol
highlight GitGutterDelete ctermbg=none
highlight GitGutterDelete ctermfg=Red
" change 'change-delete' symbol
highlight GitGutterChangeDelete ctermbg=none
highlight GitGutterChangeDelete ctermfg=Yellow

